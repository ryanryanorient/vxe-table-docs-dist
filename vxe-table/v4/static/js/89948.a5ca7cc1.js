"use strict";(self["webpackChunkvxe_table_v4"]=self["webpackChunkvxe_table_v4"]||[]).push([[89948],{89948:function(t,r,n){n.r(r),n.d(r,{default:function(){return b}});var a=n(66252),o=n(3577),_={class:"tip"},e=(0,a._)("br",null,null,-1),i=(0,a._)("br",null,null,-1),w=(0,a._)("span",{class:"green"},"（性能优化：横向虚拟滚动由列宽决定性能，每一列的列宽越大就越流畅；纵向虚拟滚动由行高决定性能，每一行的高度越高就越流畅）",-1),l={class:"demo-code"};function u(t,r,n,u,s,c){var d=(0,a.up)("table-api-link"),m=(0,a.up)("vxe-button"),f=(0,a.up)("vxe-grid"),k=(0,a.up)("pre-code");return(0,a.wg)(),(0,a.iD)("div",null,[(0,a._)("p",_,[(0,a.Uk)(" 虚拟滚动渲染"),e,(0,a.Uk)(" 大数据不建议使用双向绑定的 "),(0,a.Wm)(d,{name:"data"}),(0,a.Uk)(" 属性，建议使用 "),(0,a.Wm)(d,{prop:"loadData"}),(0,a.Uk)("/"),(0,a.Wm)(d,{prop:"loadColumn"}),(0,a.Uk)(" 函数"),i,w]),(0,a.Wm)(f,(0,a.dG)({ref:"xGrid"},t.gridOptions),{toolbar_buttons:(0,a.w5)((function(){return[(0,a.Wm)(m,{onClick:r[0]||(r[0]=function(r){return t.loadColumnAndData(1e3,20)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("1k列20条")]})),_:1}),(0,a.Wm)(m,{onClick:r[1]||(r[1]=function(r){return t.loadColumnAndData(1e3,100)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("1k列100条")]})),_:1}),(0,a.Wm)(m,{onClick:r[2]||(r[2]=function(r){return t.loadColumnAndData(5e3,500)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("5k列500条")]})),_:1}),(0,a.Wm)(m,{onClick:r[3]||(r[3]=function(r){return t.loadColumnAndData(1e4,1e4)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("1w列1w条")]})),_:1}),(0,a.Wm)(m,{onClick:r[4]||(r[4]=function(r){return t.loadColumnAndData(5e4,1e5)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("5w列10w条")]})),_:1}),(0,a.Wm)(m,{onClick:r[5]||(r[5]=function(r){return t.loadColumnAndData(1e5,3e4)})},{default:(0,a.w5)((function(){return[(0,a.Uk)("10w列30w条")]})),_:1})]})),_:1},16),(0,a._)("p",l,(0,o.zw)(t.$t("app.body.button.showCode")),1),(0,a._)("pre",null,[(0,a.Uk)("      "),(0,a.Wm)(k,{class:"xml"},{default:(0,a.w5)((function(){return[(0,a.Uk)((0,o.zw)(t.demoCodes[0]),1)]})),_:1}),(0,a.Uk)("\n      "),(0,a.Wm)(k,{class:"typescript"},{default:(0,a.w5)((function(){return[(0,a.Uk)((0,o.zw)(t.demoCodes[1]),1)]})),_:1}),(0,a.Uk)("\n    ")])])}n(60228),n(70560),n(69358),n(48324),n(89730),n(21694),n(76265),n(34338);var s=n(2262),c=n(72896),d=[],m=[],f=(0,a.aZ)({setup:function(){var t=(0,s.qj)({border:!0,showHeaderOverflow:!0,showOverflow:!0,height:500,loading:!1,columnConfig:{resizable:!0},toolbarConfig:{slots:{buttons:"toolbar_buttons"}},checkboxConfig:{checkField:"checked"}}),r=(0,s.iH)(),n=function(t){return new Promise((function(r){setTimeout((function(){var n=d.length;if(n<t)for(var a=n;a<t;a++)d.push({field:"attr"+a,title:"Attr"+a,width:140});var o=JSON.parse(JSON.stringify(d.slice(0,t)));r(o)}),100)}))},o=function(t){return new Promise((function(r){setTimeout((function(){var n=m.length;if(n<t)for(var a=n;a<t;a++)m.push({checked:!1,attr0:"attr0_row_"+a,attr1:"attr1_row_"+a,attr2:"attr2_row_"+a,attr3:"attr3_row_"+a,attr4:"attr3_row_"+a,attr5:"attr3_row_"+a,attr10:"attr10_row_"+a,attr11:"attr11_row_"+a,attr12:"attr12_row_"+a,attr13:"attr12_row_"+a,attr14:"attr12_row_"+a,attr50:"attr50_row_"+a,attr51:"attr51_row_"+a,attr52:"attr52_row_"+a,attr53:"attr53_row_"+a,attr54:"attr54_row_"+a,attr100:"attr100_row_"+a,attr101:"attr101_row_"+a,attr102:"attr102_row_"+a,attr103:"attr103_row_"+a,attr105:"attr105_row_"+a,attr104:"attr104_row_"+a,attr106:"attr106_row_"+a,attr107:"attr107_row_"+a,attr200:"attr200_row_"+a,attr201:"attr201_row_"+a,attr202:"attr202_row_"+a,attr203:"attr203_row_"+a,attr204:"attr204_row_"+a,attr205:"attr205_row_"+a,attr300:"attr300_row_"+a,attr301:"attr301_row_"+a,attr302:"attr302_row_"+a,attr303:"attr303_row_"+a,attr304:"attr304_row_"+a,attr305:"attr305_row_"+a,attr400:"attr400_row_"+a,attr401:"attr401_row_"+a,attr402:"attr402_row_"+a,attr403:"attr403_row_"+a,attr404:"attr404_row_"+a,attr405:"attr405_row_"+a,attr406:"attr405_row_"+a,attr407:"attr407_row_"+a,attr595:"attr495_row_"+a,attr596:"attr496_row_"+a,attr597:"attr497_row_"+a,attr598:"attr498_row_"+a,attr599:"attr499_row_"+a,attr1000:"attr100_row_"+a,attr1001:"attr1001_row_"+a,attr1002:"attr1002_row_"+a,attr1003:"attr1003_row_"+a,attr1004:"attr1004_row_"+a,attr1005:"attr1005_row_"+a,attr1006:"attr1005_row_"+a,attr1007:"attr1005_row_"+a,attr10005:"attr10005_row_"+a,attr10006:"attr10005_row_"+a,attr10007:"attr10005_row_"+a,attr150005:"attr100005_row_"+a,attr150006:"attr100005_row_"+a,attr150007:"attr100005_row_"+a});var o=JSON.parse(JSON.stringify(m.slice(0,t)));r(o)}),100)}))},_=function(a,_){t.loading=!0,Promise.all([n(a),o(_)]).then((function(n){var o=n[0],e=n[1],i=Date.now(),w=r.value;w?Promise.all([w.reloadColumn(o),w.reloadData(e)]).then((function(){c.s7.modal.message({content:"渲染 ".concat(a," 列 ").concat(_," 行，用时 ").concat(Date.now()-i,"毫秒"),status:"info"}),t.loading=!1})):t.loading=!1}))};return(0,a.Y3)((function(){_(600,10)})),{xGrid:r,gridOptions:t,loadColumnAndData:_,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions">\n          <template #toolbar_buttons>\n            <vxe-button @click="loadColumnAndData(1000, 20)">1k列20条</vxe-button>\n            <vxe-button @click="loadColumnAndData(1000, 100)">1k列100条</vxe-button>\n            <vxe-button @click="loadColumnAndData(5000, 500)">5k列500条</vxe-button>\n            <vxe-button @click="loadColumnAndData(10000, 10000)">1w列1w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(50000, 100000)">5w列10w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(100000, 30000)">10w列30w条</vxe-button>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, nextTick, reactive, ref } from 'vue'\n        import { VXETable, VxeGridInstance, VxeGridProps } from 'vxe-table'\n\n        const columnList: any[] = []\n        const dataList: any[] = []\n\n        export default defineComponent({\n          setup () {\n            const gridOptions = reactive({\n              border: true,\n              showHeaderOverflow: true,\n              showOverflow: true,\n              height: 500,\n              loading: false,\n              columnConfig: {\n                resizable: true\n              },\n              toolbarConfig: {\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              checkboxConfig: {\n                checkField: 'checked'\n              }\n            } as VxeGridProps)\n\n            const xGrid = ref<VxeGridInstance>()\n\n            const mockColumns = (colSize: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const currSize = columnList.length\n                  if (currSize < colSize) {\n                    for (let i = currSize ; i < colSize; i++) {\n                      columnList.push({\n                        field: 'attr' + i,\n                        title: 'Attr' + i,\n                        width: 140\n                      })\n                    }\n                  }\n                  // 模拟数据\n                  const result = JSON.parse(JSON.stringify(columnList.slice(0, colSize)))\n                  resolve(result)\n                }, 100)\n              })\n            }\n\n            const mockList = (rowSize: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const currSize = dataList.length\n                  if (currSize < rowSize) {\n                    for (let i = currSize; i < rowSize; i++) {\n                      dataList.push({\n                        checked: false,\n                        attr0: 'attr0_row_' + i,\n                        attr1: 'attr1_row_' + i,\n                        attr2: 'attr2_row_' + i,\n                        attr3: 'attr3_row_' + i,\n                        attr4: 'attr3_row_' + i,\n                        attr5: 'attr3_row_' + i,\n                        attr10: 'attr10_row_' + i,\n                        attr11: 'attr11_row_' + i,\n                        attr12: 'attr12_row_' + i,\n                        attr13: 'attr12_row_' + i,\n                        attr14: 'attr12_row_' + i,\n                        attr50: 'attr50_row_' + i,\n                        attr51: 'attr51_row_' + i,\n                        attr52: 'attr52_row_' + i,\n                        attr53: 'attr53_row_' + i,\n                        attr54: 'attr54_row_' + i,\n                        attr100: 'attr100_row_' + i,\n                        attr101: 'attr101_row_' + i,\n                        attr102: 'attr102_row_' + i,\n                        attr103: 'attr103_row_' + i,\n                        attr105: 'attr105_row_' + i,\n                        attr104: 'attr104_row_' + i,\n                        attr106: 'attr106_row_' + i,\n                        attr107: 'attr107_row_' + i,\n                        attr200: 'attr200_row_' + i,\n                        attr201: 'attr201_row_' + i,\n                        attr202: 'attr202_row_' + i,\n                        attr203: 'attr203_row_' + i,\n                        attr204: 'attr204_row_' + i,\n                        attr205: 'attr205_row_' + i,\n                        attr300: 'attr300_row_' + i,\n                        attr301: 'attr301_row_' + i,\n                        attr302: 'attr302_row_' + i,\n                        attr303: 'attr303_row_' + i,\n                        attr304: 'attr304_row_' + i,\n                        attr305: 'attr305_row_' + i,\n                        attr400: 'attr400_row_' + i,\n                        attr401: 'attr401_row_' + i,\n                        attr402: 'attr402_row_' + i,\n                        attr403: 'attr403_row_' + i,\n                        attr404: 'attr404_row_' + i,\n                        attr405: 'attr405_row_' + i,\n                        attr406: 'attr405_row_' + i,\n                        attr407: 'attr407_row_' + i,\n                        attr595: 'attr495_row_' + i,\n                        attr596: 'attr496_row_' + i,\n                        attr597: 'attr497_row_' + i,\n                        attr598: 'attr498_row_' + i,\n                        attr599: 'attr499_row_' + i,\n                        attr1000: 'attr100_row_' + i,\n                        attr1001: 'attr1001_row_' + i,\n                        attr1002: 'attr1002_row_' + i,\n                        attr1003: 'attr1003_row_' + i,\n                        attr1004: 'attr1004_row_' + i,\n                        attr1005: 'attr1005_row_' + i,\n                        attr1006: 'attr1005_row_' + i,\n                        attr1007: 'attr1005_row_' + i,\n                        attr10005: 'attr10005_row_' + i,\n                        attr10006: 'attr10005_row_' + i,\n                        attr10007: 'attr10005_row_' + i,\n                        attr150005: 'attr100005_row_' + i,\n                        attr150006: 'attr100005_row_' + i,\n                        attr150007: 'attr100005_row_' + i\n                      })\n                    }\n                  }\n                  // 模拟数据\n                  const result = JSON.parse(JSON.stringify(dataList.slice(0, rowSize)))\n                  resolve(result)\n                }, 100)\n              })\n            }\n\n            const loadColumnAndData = (colSize: number, rowSize: number) => {\n              gridOptions.loading = true\n              Promise.all([\n                mockColumns(colSize),\n                mockList(rowSize)\n              ]).then(rest => {\n                const columns = rest[0]\n                const data = rest[1]\n                const startTime = Date.now()\n                const $grid = xGrid.value\n                // 使用函数式加载\n                if ($grid) {\n                  Promise.all([\n                    $grid.reloadColumn(columns),\n                    $grid.reloadData(data)\n                  ]).then(() => {\n                    VXETable.modal.message({ content: `渲染 ${colSize} 列 ${rowSize} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                    gridOptions.loading = false\n                  })\n                } else {\n                  gridOptions.loading = false\n                }\n              })\n            }\n\n            nextTick(() => {\n              loadColumnAndData(600, 10)\n            })\n\n            return {\n              xGrid,\n              gridOptions,\n              loadColumnAndData\n            }\n          }\n        }\n        "]}}}),k=n(83744);const p=(0,k.Z)(f,[["render",u]]);var b=p}}]);