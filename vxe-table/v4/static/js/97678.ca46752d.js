"use strict";(self["webpackChunkvxe_table_v4"]=self["webpackChunkvxe_table_v4"]||[]).push([[97678],{97678:function(n,t,e){e.r(t),e.d(t,{default:function(){return f}});var o=e(66252),i=e(3577),l=(0,o._)("p",{class:"tip"},[(0,o.Uk)(" 虚拟滚动渲染，更加复杂局部递增数据、局部递增列、固定列"),(0,o._)("br")],-1),r={class:"demo-code"};function a(n,t,e,a,u,d){var c=(0,o.up)("vxe-button"),s=(0,o.up)("vxe-toolbar"),f=(0,o.up)("vxe-grid"),m=(0,o.up)("pre-code");return(0,o.wg)(),(0,o.iD)("div",null,[l,(0,o.Wm)(s,{loading:n.gridOptions.loading},{buttons:(0,o.w5)((function(){return[(0,o.Wm)(c,{onClick:t[0]||(t[0]=function(t){return n.loadList(20)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+20条")]})),_:1}),(0,o.Wm)(c,{onClick:t[1]||(t[1]=function(t){return n.loadList(50)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+50条")]})),_:1}),(0,o.Wm)(c,{onClick:t[2]||(t[2]=function(t){return n.loadList(100)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+100条")]})),_:1}),(0,o.Wm)(c,{onClick:t[3]||(t[3]=function(t){return n.loadList(300)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+300条")]})),_:1}),(0,o.Wm)(c,{onClick:t[4]||(t[4]=function(t){return n.removeList(20)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("-20条")]})),_:1}),(0,o.Wm)(c,{onClick:t[5]||(t[5]=function(t){return n.removeList(50)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("-50条")]})),_:1}),(0,o.Wm)(c,{onClick:t[6]||(t[6]=function(t){return n.loadColumns(10)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+10列")]})),_:1}),(0,o.Wm)(c,{onClick:t[7]||(t[7]=function(t){return n.loadColumns(30)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+30列")]})),_:1}),(0,o.Wm)(c,{onClick:t[8]||(t[8]=function(t){return n.loadColumns(50)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("+50列")]})),_:1}),(0,o.Wm)(c,{onClick:t[9]||(t[9]=function(t){return n.removeColumn(10)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("-10列")]})),_:1}),(0,o.Wm)(c,{onClick:t[10]||(t[10]=function(t){return n.removeColumn(20)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("-20列")]})),_:1}),(0,o.Wm)(c,{onClick:t[11]||(t[11]=function(t){return n.$refs.xGrid.scrollTo(1e3,2e3)})},{default:(0,o.w5)((function(){return[(0,o.Uk)("x=1000,y=2000")]})),_:1}),(0,o.Wm)(c,{onClick:t[12]||(t[12]=function(t){return n.$refs.xGrid.clearScroll()})},{default:(0,o.w5)((function(){return[(0,o.Uk)("清除滚动")]})),_:1})]})),_:1},8,["loading"]),(0,o.Wm)(f,(0,o.dG)({ref:"xGrid"},n.gridOptions),null,16),(0,o._)("p",r,(0,i.zw)(n.$t("app.body.button.showCode")),1),(0,o._)("pre",null,[(0,o.Uk)("      "),(0,o.Wm)(m,{class:"xml"},{default:(0,o.w5)((function(){return[(0,o.Uk)((0,i.zw)(n.demoCodes[0]),1)]})),_:1}),(0,o.Uk)("\n      "),(0,o.Wm)(m,{class:"typescript"},{default:(0,o.w5)((function(){return[(0,o.Uk)((0,i.zw)(n.demoCodes[1]),1)]})),_:1}),(0,o.Uk)("\n    ")])])}e(60228),e(98041),e(70560),e(47522),e(77049),e(21694),e(34338),e(89730),e(76265);var u=e(2262),d=(0,o.aZ)({setup:function(){var n=(0,u.iH)(),t=(0,u.qj)({border:!0,showOverflow:!0,showHeaderOverflow:!0,height:500,rowConfig:{keyField:"id"},checkboxConfig:{checkField:"checked",labelField:"id"},loading:!1}),e=0,o=1,i=[],l=[],r=function(n){return new Promise((function(t){setTimeout((function(){for(var o=[],i=0;i<n;i++){var l=e++,r={field:l?"col_".concat(l):"id",title:l?"标题_".concat(l):"ID",width:140,type:null,fixed:null};l||(r.type="checkbox"),l<2&&(r.fixed="left"),o.push(r)}t(o)}),250)}))},a=function(n){return new Promise((function(t){setTimeout((function(){for(var e=[],i=function(n){var t=o++,i={id:t,checked:!1};Array.from(new Array(1e3)).forEach((function(t,e){i["col_".concat(e)]="内容_".concat(e,"_").concat(n)})),e.push(i)},l=0;l<n;l++)i(l);t(e)}),250)}))},d=function(e){if(t.loading=!0,l.length>e){var o=n.value;l=l.slice(0,l.length-e),o&&o.loadColumn(l),t.loading=!1}},c=function(e){t.loading=!0,r(e).then((function(e){var o=n.value;l=l.concat(e),o&&o.loadColumn(l),t.loading=!1}))},s=function(e){t.loading=!0,setTimeout((function(){if(i.length>e){var o=n.value;i=i.slice(0,i.length-e),o&&o.loadData(i)}t.loading=!1}),100)},f=function(e){t.loading=!0,a(e).then((function(e){var o=n.value;i=i.concat(e),o&&o.loadData(i),t.loading=!1}))},m=function(){t.loading=!0,Promise.all([r(200).then((function(t){var e=n.value;l=l.concat(t),e&&e.loadColumn(l)})),a(600).then((function(t){var e=n.value;i=i.concat(t),e&&e.loadData(i)}))]).then((function(){t.loading=!1}))};return m(),{xGrid:n,gridOptions:t,removeColumn:d,loadColumns:c,removeList:s,loadList:f,demoCodes:['\n        <vxe-toolbar :loading="gridOptions.loading">\n          <template #buttons>\n            <vxe-button @click="loadList(20)">+20条</vxe-button>\n            <vxe-button @click="loadList(50)">+50条</vxe-button>\n            <vxe-button @click="loadList(100)">+100条</vxe-button>\n            <vxe-button @click="loadList(300)">+300条</vxe-button>\n            <vxe-button @click="removeList(20)">-20条</vxe-button>\n            <vxe-button @click="removeList(50)">-50条</vxe-button>\n            <vxe-button @click="loadColumns(10)">+10列</vxe-button>\n            <vxe-button @click="loadColumns(30)">+30列</vxe-button>\n            <vxe-button @click="loadColumns(50)">+50列</vxe-button>\n            <vxe-button @click="removeColumn(10)">-10列</vxe-button>\n            <vxe-button @click="removeColumn(20)">-20列</vxe-button>\n            <vxe-button @click="$refs.xGrid.scrollTo(1000, 2000)">x=1000,y=2000</vxe-button>\n            <vxe-button @click="$refs.xGrid.clearScroll()">清除滚动</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-grid ref="xGrid" v-bind="gridOptions"></vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridInstance, VxeGridPropTypes, VxeGridProps } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xGrid = ref<VxeGridInstance>()\n\n            const gridOptions = reactive({\n              border: true,\n              showOverflow: true,\n              showHeaderOverflow: true,\n              height: 500,\n              rowConfig: {\n                keyField: 'id'\n              },\n              checkboxConfig: {\n                checkField: 'checked',\n                labelField: 'id'\n              },\n              loading: false\n            } as VxeGridProps)\n\n            let colIndex = 0\n            let rowIndex = 1\n\n            let allData: any[] = []\n            let allColumn: VxeGridPropTypes.Columns = []\n\n            const findColumnList = (size: number): Promise<VxeGridPropTypes.Columns> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const columns: VxeGridPropTypes.Columns = []\n                  for (let index = 0; index < size; index++) {\n                    const key = colIndex++\n                    const config: any = {\n                      field: key ? `col_${key}` : 'id',\n                      title: key ? `标题_${key}` : 'ID',\n                      width: 140,\n                      type: null,\n                      fixed: null\n                    }\n                    if (!key) {\n                      config.type = 'checkbox'\n                    }\n                    if (key < 2) {\n                      config.fixed = 'left'\n                    }\n                    columns.push(config)\n                  }\n                  resolve(columns)\n                }, 250)\n              })\n            }\n\n            const findDataList = (size: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const list: any[] = []\n                  for (let index = 0; index < size; index++) {\n                    const key = rowIndex++\n                    const item: any = { id: key, checked: false }\n                    // 由于生成数据比较耗时，所以固定生成1000字段\n                    Array.from(new Array(1000)).forEach((num, cIndex) => {\n                      item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n                    })\n                    list.push(item)\n                  }\n                  resolve(list)\n                }, 250)\n              })\n            }\n\n            const removeColumn = (size: number) => {\n              gridOptions.loading = true\n              if (allColumn.length > size) {\n                const $grid = xGrid.value\n                allColumn = allColumn.slice(0, allColumn.length - size)\n                if ($grid) {\n                  $grid.loadColumn(allColumn)\n                }\n                gridOptions.loading = false\n              }\n            }\n\n            const loadColumns = (size: number) => {\n              gridOptions.loading = true\n              findColumnList(size).then(data => {\n                const $grid = xGrid.value\n                allColumn = allColumn.concat(data) // 局部追加并保存全量数据\n                if ($grid) {\n                  $grid.loadColumn(allColumn)\n                }\n                gridOptions.loading = false\n              })\n            }\n\n            const removeList = (size: number) => {\n              gridOptions.loading = true\n              setTimeout(() => {\n                if (allData.length > size) {\n                  const $grid = xGrid.value\n                  allData = allData.slice(0, allData.length - size)\n                  if ($grid) {\n                    $grid.loadData(allData)\n                  }\n                }\n                gridOptions.loading = false\n              }, 100)\n            }\n\n            const loadList = (size: number) => {\n              gridOptions.loading = true\n              findDataList(size).then(data => {\n                const $grid = xGrid.value\n                allData = allData.concat(data) // 局部追加并保存全量数据\n                if ($grid) {\n                  $grid.loadData(allData)\n                }\n                gridOptions.loading = false\n              })\n            }\n\n            const init = () => {\n              gridOptions.loading = true\n              Promise.all([\n                findColumnList(200).then(data => {\n                  const $grid = xGrid.value\n                  allColumn = allColumn.concat(data)\n                  if ($grid) {\n                    $grid.loadColumn(allColumn)\n                  }\n                }),\n                findDataList(600).then(data => {\n                  const $grid = xGrid.value\n                  allData = allData.concat(data)\n                  if ($grid) {\n                    $grid.loadData(allData)\n                  }\n                })\n              ]).then(() => {\n                gridOptions.loading = false\n              })\n            }\n\n            init()\n\n            return {\n              xGrid,\n              gridOptions,\n              removeColumn,\n              loadColumns,\n              removeList,\n              loadList\n            }\n          }\n        })\n        "]}}}),c=e(83744);const s=(0,c.Z)(d,[["render",a]]);var f=s},71568:function(n,t,e){var o=e(68844),i=e(74684),l=e(34327),r=/"/g,a=o("".replace);n.exports=function(n,t,e,o){var u=l(i(n)),d="<"+t;return""!==e&&(d+=" "+e+'="'+a(l(o),r,"&quot;")+'"'),d+">"+u+"</"+t+">"}},74580:function(n,t,e){var o=e(3689);n.exports=function(n){return o((function(){var t=""[n]('"');return t!==t.toLowerCase()||t.split('"').length>3}))}},98041:function(n,t,e){var o=e(79989),i=e(71568),l=e(74580);o({target:"String",proto:!0,forced:l("fixed")},{fixed:function(){return i(this,"tt","","")}})}}]);