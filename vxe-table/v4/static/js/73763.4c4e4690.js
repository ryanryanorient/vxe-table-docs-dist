"use strict";(self["webpackChunkvxe_table_v4"]=self["webpackChunkvxe_table_v4"]||[]).push([[73763],{73763:function(e,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=a(66252),d=a(3577),o={class:"tip"},l={class:"demo-code"};function i(e,n,a,i,r,s){var c=(0,t.up)("table-api-link"),u=(0,t.up)("vxe-column"),p=(0,t.up)("vxe-table"),m=(0,t.up)("pre-code");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("p",o,[(0,t.Uk)(" 树表格的懒加载和右键菜单，通过调用 "),(0,t.Wm)(c,{prop:"clearTreeExpandLoaded"}),(0,t.Uk)(" 方法清除加载完成状态，通过调用 "),(0,t.Wm)(c,{prop:"reloadTreeExpand"}),(0,t.Uk)(" 方法重新加载子节点 ")]),(0,t.Wm)(p,{border:"",ref:"xTree1","row-config":{keyField:"id"},"column-config":{resizable:!0},"menu-config":e.demo1.tableMenu,"tree-config":e.demo1.treeConfig,data:e.demo1.tableData,onMenuClick:e.contextMenuClickEvent},{default:(0,t.w5)((function(){return[(0,t.Wm)(u,{field:"name",title:"Name",width:"400","tree-node":""}),(0,t.Wm)(u,{field:"size",title:"Size"}),(0,t.Wm)(u,{field:"type",title:"Type"}),(0,t.Wm)(u,{field:"date",title:"Date"})]})),_:1},8,["menu-config","tree-config","data","onMenuClick"]),(0,t._)("p",l,(0,d.zw)(e.$t("app.body.button.showCode")),1),(0,t._)("pre",null,[(0,t.Uk)("      "),(0,t.Wm)(m,{class:"xml"},{default:(0,t.w5)((function(){return[(0,t.Uk)((0,d.zw)(e.demoCodes[0]),1)]})),_:1}),(0,t.Uk)("\n      "),(0,t.Wm)(m,{class:"typescript"},{default:(0,t.w5)((function(){return[(0,t.Uk)((0,d.zw)(e.demoCodes[1]),1)]})),_:1}),(0,t.Uk)("\n    ")])])}a(60228),a(34284),a(47522);var r=a(2262),s=(0,t.aZ)({setup:function(){var e=(0,r.iH)(),n=(0,r.qj)({treeConfig:{lazy:!0,transform:!0,hasChild:"hasChild",loadMethod:function(e){var n=e.row;return new Promise((function(e){setTimeout((function(){var a=[{id:n.id+1e5,parentId:n.id,name:n.name+"Test45",type:"mp4",size:null,date:"2021-10-03",hasChild:!0},{id:n.id+15e4,parentId:n.id,name:n.name+"Test56",type:"mp3",size:null,date:"2021-07-09",hasChild:!1}];e(a)}),500)}))}},tableMenu:{body:{options:[[{code:"clearLoaded",name:"清除加载状态",disabled:!1},{code:"reloadNodes",name:"重新加载子节点",disabled:!1},{code:"expand",name:"展开节点",disabled:!1},{code:"contract",name:"收起节点",disabled:!1}]]},visibleMethod:function(n){var a=n.row,t=n.type,d=n.options,o=e.value;return o&&"body"===t&&d.forEach((function(e){e.forEach((function(e){if("expand"===e.code||"contract"===e.code)if(a&&a.hasChild){var n=o.isTreeExpandByRow(a);e.disabled="expand"===e.code?n:!n}else e.disabled=!0}))})),!0}},tableData:[{id:1e4,parentId:null,name:"test abc1",type:"mp3",size:1024,date:"2020-08-01"},{id:10050,parentId:null,name:"Test2",type:"mp4",size:null,date:"2021-04-01",hasChild:!0},{id:23666,parentId:null,name:"Test23",type:"mp4",size:null,date:"2021-01-02",hasChild:!0},{id:24555,parentId:null,name:"test abc9",type:"avi",size:224,date:"2020-10-01"}]}),a=function(n){var a=n.menu,t=n.row,d=e.value;if(d)switch(a.code){case"clearLoaded":d.clearTreeExpandLoaded(t);break;case"reloadNodes":d.reloadTreeExpand(t);break;case"expand":d.setTreeExpand(t,!0);break;case"contract":d.setTreeExpand(t,!1);break}};return{xTree1:e,demo1:n,contextMenuClickEvent:a,demoCodes:['\n        <vxe-table\n          border\n          ref="xTree1"\n          :row-config="{keyField: \'id\'}"\n          :column-config="{resizable: true}"\n          :menu-config="demo1.tableMenu"\n          :tree-config="demo1.treeConfig"\n          :data="demo1.tableData"\n          @menu-click="contextMenuClickEvent">\n          <vxe-column field="name" title="Name" width="400" tree-node></vxe-column>\n          <vxe-column field="size" title="Size"></vxe-column>\n          <vxe-column field="type" title="Type"></vxe-column>\n          <vxe-column field="date" title="Date"></vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeTableInstance, VxeTablePropTypes, VxeTableEvents } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xTree1 = ref<VxeTableInstance>()\n\n            const demo1 = reactive({\n              treeConfig: {\n                lazy: true,\n                transform: true,\n                hasChild: 'hasChild',\n                loadMethod ({ row }) {\n                  // 异步加载子节点\n                  return new Promise(resolve => {\n                    setTimeout(() => {\n                      const childs = [\n                        { id: row.id + 100000, parentId: row.id, name: row.name + 'Test45', type: 'mp4', size: null, date: '2021-10-03', hasChild: true },\n                        { id: row.id + 150000, parentId: row.id, name: row.name + 'Test56', type: 'mp3', size: null, date: '2021-07-09', hasChild: false }\n                      ]\n                      resolve(childs)\n                    }, 500)\n                  })\n                }\n              } as VxeTablePropTypes.TreeConfig,\n              tableMenu: {\n                body: {\n                  options: [\n                    [\n                      { code: 'clearLoaded', name: '清除加载状态', disabled: false },\n                      { code: 'reloadNodes', name: '重新加载子节点', disabled: false },\n                      { code: 'expand', name: '展开节点', disabled: false },\n                      { code: 'contract', name: '收起节点', disabled: false }\n                    ]\n                  ]\n                },\n                visibleMethod ({ row, type, options }) {\n                  const $table = xTree1.value\n                  if (type === 'body') {\n                    options.forEach(list => {\n                      list.forEach(item => {\n                        if (item.code === 'expand' || item.code === 'contract') {\n                          if (row && row.hasChild) {\n                            const isExpand = $table.isTreeExpandByRow(row)\n                            item.disabled = item.code === 'expand' ? isExpand : !isExpand\n                          } else {\n                            item.disabled = true\n                          }\n                        }\n                      })\n                    })\n                  }\n                  return true\n                }\n              } as VxeTablePropTypes.MenuConfig,\n              tableData: [\n                { id: 10000, parentId: null, name: 'test abc1', type: 'mp3', size: 1024, date: '2020-08-01' },\n                { id: 10050, parentId: null, name: 'Test2', type: 'mp4', size: null, date: '2021-04-01', hasChild: true },\n                { id: 23666, parentId: null, name: 'Test23', type: 'mp4', size: null, date: '2021-01-02', hasChild: true },\n                { id: 24555, parentId: null, name: 'test abc9', type: 'avi', size: 224, date: '2020-10-01' }\n              ] as any[]\n            })\n\n            const contextMenuClickEvent: VxeTableEvents.MenuClick = ({ menu, row }) => {\n              const $table = xTree1.value\n              switch (menu.code) {\n                case 'clearLoaded':\n                  $table.clearTreeExpandLoaded(row)\n                  break\n                case 'reloadNodes':\n                  $table.reloadTreeExpand(row)\n                  break\n                case 'expand':\n                  $table.setTreeExpand(row, true)\n                  break\n                case 'contract':\n                  $table.setTreeExpand(row, false)\n                  break\n              }\n            }\n\n            return {\n              xTree1,\n              demo1,\n              contextMenuClickEvent\n            }\n          }\n        })\n        "]}}}),c=a(83744);const u=(0,c.Z)(s,[["render",i]]);var p=u}}]);