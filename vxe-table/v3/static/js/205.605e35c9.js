"use strict";(self["webpackChunkvxe_table_v3"]=self["webpackChunkvxe_table_v3"]||[]).push([[205],{50205:function(e,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=function(){var e=this,n=e._self._c;return n("div",[n("p",{staticClass:"tip"},[e._v(" 树表格的懒加载和右键菜单，通过调用 "),n("table-api-link",{attrs:{prop:"clearTreeExpandLoaded"}}),e._v(" 方法清除加载完成状态，通过调用 "),n("table-api-link",{attrs:{prop:"reloadTreeExpand"}}),e._v(" 方法重新加载子节点 ")],1),n("vxe-table",{ref:"xTree",attrs:{border:"",resizable:"",height:"400","row-id":"id","menu-config":{body:{options:e.bodyMenus},visibleMethod:e.visibleMethod},"tree-config":{lazy:!0,transform:!0,rowField:"id",parentField:"parentId",hasChild:"hasChild",loadMethod:e.loadChildrenMethod},data:e.tableData},on:{"menu-click":e.contextMenuClickEvent}},[n("vxe-column",{attrs:{field:"id",title:"ID",width:"400","tree-node":""}}),n("vxe-column",{attrs:{field:"size",title:"Size"}}),n("vxe-column",{attrs:{field:"type",title:"Type"}}),n("vxe-column",{attrs:{field:"date",title:"Date"}})],1),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("pre-code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("pre-code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")],1)],1)},d=[],i=(a(60228),a(34284),a(47522),a(76801),1),l={data:function(){return{tableData:[{id:++i,parentKey:null,name:"test abc1",type:"mp3",size:1024,date:"2020-08-01"},{id:++i,parentKey:null,name:"Test2",type:"mp4",size:null,date:"2021-04-01",hasChild:!0},{id:++i,parentKey:null,name:"Test23",type:"mp4",size:null,date:"2021-01-02",hasChild:!0},{id:++i,parentKey:null,name:"test abc9",type:"avi",size:224,date:"2020-10-04"},{id:++i,parentKey:null,name:"test abc",type:"avi",size:224,date:"2020-04-01"},{id:++i,parentKey:null,name:"test abc",type:"avi",size:224,date:"2020-10-03"},{id:++i,parentKey:null,name:"test abc",type:"avi",size:224,date:"2020-10-09"},{id:++i,parentKey:null,name:"test abc",type:"avi",size:224,date:"2020-05-01"}],bodyMenus:[[{code:"clearLoaded",name:"清除加载状态",disabled:!1},{code:"reloadNodes",name:"重新加载子节点",disabled:!1},{code:"expand",name:"展开节点",disabled:!1},{code:"contract",name:"收起节点",disabled:!1}]],demoCodes:['\n        <vxe-table\n          border\n          resizable\n          height="400"\n          ref="xTree"\n          row-id="id"\n          :menu-config="{body: {options: bodyMenus}, visibleMethod}"\n          :tree-config="{lazy: true, transform: true, rowField: \'id\', parentField: \'parentId\', hasChild: \'hasChild\', loadMethod: loadChildrenMethod}"\n          :data="tableData"\n          @menu-click="contextMenuClickEvent">\n          <vxe-column field="id" title="ID" width="400" tree-node></vxe-column>\n          <vxe-column field="size" title="Size"></vxe-column>\n          <vxe-column field="type" title="Type"></vxe-column>\n          <vxe-column field="date" title="Date"></vxe-column>\n        </vxe-table>\n        ',"\n        let key = 1\n        export default {\n          data () {\n            return {\n              tableData: [\n                { id: ++key, parentKey: null, name: 'test abc1', type: 'mp3', size: 1024, date: '2020-08-01' },\n                { id: ++key, parentKey: null, name: 'Test2', type: 'mp4', size: null, date: '2021-04-01', hasChild: true },\n                { id: ++key, parentKey: null, name: 'Test23', type: 'mp4', size: null, date: '2021-01-02', hasChild: true },\n                { id: ++key, parentKey: null, name: 'test abc9', type: 'avi', size: 224, date: '2020-10-04' },\n                { id: ++key, parentKey: null, name: 'test abc', type: 'avi', size: 224, date: '2020-04-01' },\n                { id: ++key, parentKey: null, name: 'test abc', type: 'avi', size: 224, date: '2020-10-03' },\n                { id: ++key, parentKey: null, name: 'test abc', type: 'avi', size: 224, date: '2020-10-09' },\n                { id: ++key, parentKey: null, name: 'test abc', type: 'avi', size: 224, date: '2020-05-01' }\n              ],\n              bodyMenus: [\n                [\n                  { code: 'clearLoaded', name: '清除加载状态', disabled: false },\n                  { code: 'reloadNodes', name: '重新加载子节点', disabled: false },\n                  { code: 'expand', name: '展开节点', disabled: false },\n                  { code: 'contract', name: '收起节点', disabled: false }\n                ]\n              ]\n            }\n          },\n          methods: {\n            loadChildrenMethod ({ row }) {\n              // 异步加载子节点\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const childs = [\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp4', size: null, date: '2021-10-03', hasChild: true },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-07-09', hasChild: false },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-07-09', hasChild: true },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-08-05', hasChild: false },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-07-01', hasChild: false },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-07-01', hasChild: true },\n                    { id: ++key, parentId: row.id, name: row.name + 'Test', type: 'mp3', size: null, date: '2021-07-01', hasChild: false }\n                  ]\n                  resolve(childs)\n                }, 500)\n              })\n            },\n            visibleMethod  ({ row, type }) {\n              let xTree = this.$refs.xTree\n              if (type === 'body') {\n                this.bodyMenus.forEach(list => {\n                  list.forEach(item => {\n                    if (['clearLoaded', 'reloadNodes'].includes(item.code)) {\n                      item.disabled = !row.hasChild || !xTree.isTreeExpandLoaded(row)\n                    } else if (['expand', 'contract'].includes(item.code)) {\n                      if (row.hasChild) {\n                        let isExpand = xTree.isTreeExpandByRow(row)\n                        item.disabled = ['expand'].includes(item.code) ? isExpand : !isExpand\n                      } else {\n                        item.disabled = true\n                      }\n                    }\n                  })\n                })\n              }\n              return true\n            },\n            contextMenuClickEvent ({ menu, row, column }) {\n              let xTree = this.$refs.xTree\n              switch (menu.code) {\n                case 'clearLoaded':\n                  xTree.clearTreeExpandLoaded(row)\n                  break\n                case 'reloadNodes':\n                  xTree.reloadTreeExpand(row)\n                  break\n                case 'expand':\n                  xTree.setTreeExpand(row, true)\n                  break\n                case 'contract':\n                  xTree.setTreeExpand(row, false)\n                  break\n              }\n            }\n          }\n        }\n        "]}},methods:{loadChildrenMethod:function(e){var n=e.row;return new Promise((function(e){setTimeout((function(){var a=[{id:++i,parentId:n.id,name:n.name+"Test",type:"mp4",size:null,date:"2021-10-03",hasChild:!0},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-07-09",hasChild:!1},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-07-09",hasChild:!0},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-08-05",hasChild:!1},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-07-01",hasChild:!1},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-07-01",hasChild:!0},{id:++i,parentId:n.id,name:n.name+"Test",type:"mp3",size:null,date:"2021-07-01",hasChild:!1}];e(a)}),500)}))},visibleMethod:function(e){var n=e.row,a=e.type,t=this.$refs.xTree;return"body"===a&&this.bodyMenus.forEach((function(e){e.forEach((function(e){if(["clearLoaded","reloadNodes"].includes(e.code))e.disabled=!n.hasChild||!t.isTreeExpandLoaded(n);else if(["expand","contract"].includes(e.code))if(n.hasChild){var a=t.isTreeExpandByRow(n);e.disabled=["expand"].includes(e.code)?a:!a}else e.disabled=!0}))})),!0},contextMenuClickEvent:function(e){var n=e.menu,a=e.row,t=this.$refs.xTree;switch(n.code){case"clearLoaded":t.clearTreeExpandLoaded(a);break;case"reloadNodes":t.reloadTreeExpand(a);break;case"expand":t.setTreeExpand(a,!0);break;case"contract":t.setTreeExpand(a,!1);break}}}},s=l,r=a(1001),o=(0,r.Z)(s,t,d,!1,null,null,null),p=o.exports}}]);