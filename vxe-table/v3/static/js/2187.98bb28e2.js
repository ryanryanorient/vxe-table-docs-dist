"use strict";(self["webpackChunkvxe_table_v3"]=self["webpackChunkvxe_table_v3"]||[]).push([[2187],{92187:function(t,e,n){n.r(e),n.d(e,{default:function(){return m}});var l=function(){var t=this,e=t._self._c;return e("div",[e("p",{staticClass:"tip"},[t._v(" 虚拟滚动"),e("span",{staticClass:"orange"},[t._v("（最大可以支撑 5w 列、30w 行）")]),e("br"),t._v(" 高性能的虚拟渲染，默认情况下，如果设置了 "),e("table-api-link",{attrs:{prop:"height"}}),t._v("、"),e("table-api-link",{attrs:{prop:"max-height"}}),t._v(" 则会根据触发规则自动启用虚拟渲染，触发规则由 "),e("table-api-link",{attrs:{prop:"scroll-x"}}),t._v("."),e("table-api-link",{attrs:{prop:"gt"}}),t._v(" | "),e("table-api-link",{attrs:{prop:"scroll-y"}}),t._v("."),e("table-api-link",{attrs:{prop:"gt"}}),t._v(" 设置。虚拟滚动启用后只会渲染指定范围内的可视区数据，其他的数据将被卷去收起，当滚动到可视区时才被渲染出来"),e("br"),e("span",{staticClass:"red"},[t._v("（注：启用虚拟滚动后："),e("table-api-link",{attrs:{prop:"show-overflow"}}),t._v("，"),e("table-api-link",{attrs:{prop:"show-header-overflow"}}),t._v("，"),e("table-api-link",{attrs:{prop:"show-footer-overflow"}}),t._v(" 参数将根据不同场景各自触发生效，无法取消；如果需要支持，将虚拟滚动关闭即可）")],1),e("br"),e("span",{staticClass:"green"},[t._v("（性能优化：横向虚拟滚动由列宽决定性能，每一列的列宽越大就越流畅；纵向虚拟滚动由行高决定性能，每一行的高度越高就越流畅）")])],1),e("vxe-table",{ref:"xTable1",attrs:{border:"","show-overflow":"",height:"300","row-config":{isHover:!0},"sort-config":{trigger:"cell"}}},[e("vxe-column",{attrs:{type:"seq",width:"100"}}),e("vxe-column",{attrs:{field:"name",title:"Name",sortable:""}}),e("vxe-column",{attrs:{field:"sex",title:"Sex"}}),e("vxe-column",{attrs:{field:"age",title:"Age"}}),e("vxe-column",{attrs:{field:"address",title:"Address","show-overflow":""}})],1),e("p",{staticClass:"demo-code"},[t._v(t._s(t.$t("app.body.button.showCode")))]),e("pre",[t._v("    "),e("pre-code",{staticClass:"xml"},[t._v(t._s(t.demoCodes[0]))]),t._v("\n    "),e("pre-code",{staticClass:"javascript"},[t._v(t._s(t.demoCodes[1]))]),t._v("\n  ")],1),e("p",{staticClass:"tip"},[t._v(" 手动调优，对于低性能的浏览器可以通过设置 "),e("table-api-link",{attrs:{prop:"oSize"}}),t._v(" 偏移量来缓解渲染次数，偏移量越大渲染次数就越少，但是每次渲染的耗时就越久"),e("br"),t._v(" 通过指定 "),e("table-api-link",{attrs:{prop:"scroll-x"}}),t._v("={gt: 20} 或 "),e("table-api-link",{attrs:{prop:"scroll-y"}}),t._v("={gt: 40} 适合的参数可以手动调优，如果设置 "),e("table-api-link",{attrs:{prop:"enabled"}}),t._v("=false 则关闭虚拟滚动"),e("br")],1),e("vxe-table",{ref:"xTable2",attrs:{border:"","show-overflow":"","show-header-overflow":"","show-footer-overflow":"","show-footer":"",height:"300","sort-config":{trigger:"cell"},"footer-method":t.footerMethod,"scroll-x":{gt:10},"scroll-y":{gt:100}}},[e("vxe-column",{attrs:{type:"seq",width:"100"}}),e("vxe-column",{attrs:{field:"name",title:"Name",width:"150",sortable:""}}),e("vxe-column",{attrs:{field:"sex",title:"Sex",width:"100"}}),e("vxe-column",{attrs:{field:"age",title:"Age",width:"100"}}),e("vxe-column",{attrs:{field:"num",title:"Num",width:"100"}}),e("vxe-column",{attrs:{field:"num2",title:"Num2",width:"100"}}),e("vxe-column",{attrs:{field:"attr19",title:"Name",width:"150",sortable:""}}),e("vxe-column",{attrs:{field:"attr18",title:"Sex",width:"100"}}),e("vxe-column",{attrs:{field:"attr17",title:"Age",width:"100"}}),e("vxe-column",{attrs:{field:"date3",title:"Date",width:"200","show-overflow":""}}),e("vxe-column",{attrs:{field:"role",title:"Role",width:"100"}}),e("vxe-column",{attrs:{field:"attr16",title:"Age",width:"100"}}),e("vxe-column",{attrs:{field:"attr15",title:"Num2",width:"100"}}),e("vxe-column",{attrs:{field:"attr14",title:"Sex",width:"100"}}),e("vxe-column",{attrs:{field:"attr13",title:"Name",width:"150",sortable:""}}),e("vxe-column",{attrs:{field:"attr12",title:"Sex",width:"100"}}),e("vxe-column",{attrs:{field:"attr11",title:"Age",width:"100"}}),e("vxe-column",{attrs:{field:"attr1",title:"Num",width:"100"}}),e("vxe-column",{attrs:{field:"address",title:"Address",width:"200","show-overflow":""}}),e("vxe-column",{attrs:{field:"attr2",title:"Role",width:"100"}}),e("vxe-column",{attrs:{field:"attr3",title:"Age",width:"100"}}),e("vxe-column",{attrs:{field:"attr4",title:"Num2",width:"100"}}),e("vxe-column",{attrs:{field:"attr5",title:"Rate",width:"100"}}),e("vxe-column",{attrs:{field:"attr6",title:"Name",width:"150",sortable:""}}),e("vxe-column",{attrs:{field:"attr7",title:"Date",width:"200","show-overflow":""}}),e("vxe-column",{attrs:{field:"attr8",title:"Role",width:"100"}}),e("vxe-column",{attrs:{field:"attr9",title:"Num",width:"100"}}),e("vxe-column",{attrs:{field:"attr10",title:"Address",width:"200","show-overflow":""}})],1),e("pre",[t._v("    "),e("pre-code",[t._v("\n      | Arrow Up ↑ | 匀速向上滚动数据 |\n      | Arrow Down ↓ | 匀速向下滚动数据 |\n      | Arrow Left ← | 匀速向左滚动数据 |\n      | Arrow Right → | 匀速向右滚动数据 |\n      | Page Up | 向上翻页滚动 |\n      | Page Down | 向下翻页滚动 |\n      | Spacebar | 翻页滚动 |\n      | Home | 滚动到顶部 |\n      | End | 滚动到底部 |\n    ")]),t._v("\n  ")],1),e("p",{staticClass:"demo-code"},[t._v(t._s(t.$t("app.body.button.showCode")))]),e("pre",[t._v("    "),e("pre-code",{staticClass:"xml"},[t._v(t._s(t.demoCodes[2]))]),t._v("\n    "),e("pre-code",{staticClass:"javascript"},[t._v(t._s(t.demoCodes[3]))]),t._v("\n  ")],1)],1)},o=[],i=(n(60228),n(70560),n(50886),n(38478)),r=n.n(i),a={data:function(){return{demoCodes:['\n        <vxe-table\n          border\n          show-overflow\n          ref="xTable1"\n          height="300"\n          :row-config="{isHover: true}"\n          :sort-config="{trigger: \'cell\'}">\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" sortable></vxe-column>\n          <vxe-column field="sex" title="Sex"></vxe-column>\n          <vxe-column field="age" title="Age"></vxe-column>\n          <vxe-column field="address" title="Address" show-overflow></vxe-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {}\n          },\n          mounted () {\n            this.$nextTick(() => {\n              const $table = this.$refs.xTable1\n              this.mockList(500).then(data => {\n                if ($table) {\n                  $table.loadData(data)\n                }\n              })\n            })\n          },\n          methods: {\n            mockList (size) {\n              return new Promise(resolve => {\n                const list = []\n                for (let index = 0; index < size; index++) {\n                  list.push({\n                    name: `名称${index}`,\n                    sex: '0',\n                    num: 123,\n                    age: 18,\n                    num2: 234,\n                    rate: 3,\n                    address: 'shenzhen'\n                  })\n                }\n                resolve(list)\n              })\n            }\n          }\n        }\n        ",'\n        <vxe-table\n          border\n          show-overflow\n          show-header-overflow\n          show-footer-overflow\n          show-footer\n          ref="xTable2"\n          height="300"\n          :sort-config="{trigger: \'cell\'}"\n          :footer-method="footerMethod"\n          :scroll-x="{gt: 10}"\n          :scroll-y="{gt: 100}">\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" width="150" sortable></vxe-column>\n          <vxe-column field="sex" title="Sex" width="100"></vxe-column>\n          <vxe-column field="age" title="Age" width="100"></vxe-column>\n          <vxe-column field="num" title="Num" width="100"></vxe-column>\n          <vxe-column field="num2" title="Num2" width="100"></vxe-column>\n          <vxe-column field="attr19" title="Name" width="150" sortable></vxe-column>\n          <vxe-column field="attr18" title="Sex" width="100"></vxe-column>\n          <vxe-column field="attr17" title="Age" width="100"></vxe-column>\n          <vxe-column field="date3" title="Date" width="200" show-overflow></vxe-column>\n          <vxe-column field="role" title="Role" width="100"></vxe-column>\n          <vxe-column field="attr16" title="Age" width="100"></vxe-column>\n          <vxe-column field="attr15" title="Num2" width="100"></vxe-column>\n          <vxe-column field="attr14" title="Sex" width="100"></vxe-column>\n          <vxe-column field="attr13" title="Name" width="150" sortable></vxe-column>\n          <vxe-column field="attr12" title="Sex" width="100"></vxe-column>\n          <vxe-column field="attr11" title="Age" width="100"></vxe-column>\n          <vxe-column field="attr1" title="Num" width="100"></vxe-column>\n          <vxe-column field="address" title="Address" width="200" show-overflow></vxe-column>\n          <vxe-column field="attr2" title="Role" width="100"></vxe-column>\n          <vxe-column field="attr3" title="Age" width="100"></vxe-column>\n          <vxe-column field="attr4" title="Num2" width="100"></vxe-column>\n          <vxe-column field="attr5" title="Rate" width="100"></vxe-column>\n          <vxe-column field="attr6" title="Name" width="150" sortable></vxe-column>\n          <vxe-column field="attr7" title="Date" width="200" show-overflow></vxe-column>\n          <vxe-column field="attr8" title="Role" width="100"></vxe-column>\n          <vxe-column field="attr9" title="Num" width="100"></vxe-column>\n          <vxe-column field="attr10" title="Address" width="200" show-overflow></vxe-column>\n        </vxe-table>\n        ',"\n        import XEUtils from 'xe-utils'\n        \n        export default {\n          data () {\n            return {}\n          },\n          mounted () {\n            this.$nextTick(() => {\n              const $table = this.$refs.xTable2\n              this.mockList(500).then(data => {\n                if ($table) {\n                  $table.loadData(data)\n                }\n              })\n            })\n          },\n          methods: {\n            mockList (size) {\n              return new Promise(resolve => {\n                const list = []\n                for (let index = 0; index < size; index++) {\n                  list.push({\n                    name: `名称${index}`,\n                    sex: '0',\n                    num: 123,\n                    age: 18,\n                    num2: 234,\n                    rate: 3,\n                    address: 'shenzhen'\n                  })\n                }\n                resolve(list)\n              })\n            },\n            footerMethod ({ columns, data }) {\n              // 返回一个二维数组的表尾合计\n              console.log(data.length)\n              return [\n                columns.map((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    return '平均'\n                  }\n                  switch (column.property) {\n                    case 'age':\n                    case 'rate':\n                    case 'num':\n                    case 'num2':\n                      return parseInt(XEUtils.mean(data, column.property))\n                  }\n                  return '无'\n                })\n              ]\n            }\n          }\n        }\n        "]}},mounted:function(){var t=this;this.$nextTick((function(){var e=t.$refs.xTable1;t.mockList(500).then((function(t){e&&e.loadData(t)}))})),this.$nextTick((function(){var e=t.$refs.xTable2;t.mockList(500).then((function(t){e&&e.loadData(t)}))}))},methods:{mockList:function(t){return new Promise((function(e){for(var n=[],l=0;l<t;l++)n.push({name:"名称".concat(l),sex:"0",num:123,age:18,num2:234,rate:3,address:"shenzhen"});e(n)}))},footerMethod:function(t){var e=t.columns,n=t.data;return[e.map((function(t,e){if(0===e)return"平均";switch(t.property){case"age":case"rate":case"num":case"num2":return parseInt(r().mean(n,t.property))}return"无"}))]}}},s=a,d=n(1001),c=(0,d.Z)(s,l,o,!1,null,null,null),m=c.exports}}]);