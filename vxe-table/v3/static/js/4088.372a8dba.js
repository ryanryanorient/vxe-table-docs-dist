"use strict";(self["webpackChunkvxe_table_v3"]=self["webpackChunkvxe_table_v3"]||[]).push([[4088],{64088:function(t,e,n){n.r(e),n.d(e,{default:function(){return m}});var l=function(){var t=this,e=t._self._c;return e("div",[e("p",{staticClass:"tip"},[t._v(" 虚拟渲染与单元格合并，可以通过设置参数 "),e("table-api-link",{attrs:{prop:"merge-cells"}}),t._v(" 或调用函数 "),e("table-api-link",{attrs:{prop:"setMergeCells"}}),t._v("、"),e("table-api-link",{attrs:{prop:"setMergeCells"}}),t._v(" 来控制单元格的临时合并状态"),e("br"),e("span",{staticClass:"red"},[t._v("（注：合并是以牺牲渲染性能为代价，如果需要用合并建议关闭虚拟滚动）")])],1),e("vxe-table",{ref:"xTable",attrs:{border:"",resizable:"","show-overflow":"","show-header-overflow":"","show-footer":"",height:"500","export-config":{},"merge-cells":t.mergeCells,"sort-config":{trigger:"cell"},"merge-footer-items":t.mergeFooterItems,"footer-method":t.footerMethod,loading:t.loading}},[e("vxe-column",{attrs:{type:"seq",width:"100"}}),e("vxe-column",{attrs:{field:"name",title:"Name",sortable:"",width:"200"}}),e("vxe-column",{attrs:{field:"id",title:"ID",width:"200"}}),e("vxe-column",{attrs:{field:"sex",title:"Sex",width:"200"}}),e("vxe-column",{attrs:{field:"rate",title:"Rate",width:"200"}}),e("vxe-column",{attrs:{field:"region",title:"Region",width:"200"}}),e("vxe-column",{attrs:{field:"time",title:"Time",width:"200"}}),e("vxe-column",{attrs:{field:"address",title:"Address",width:"300","show-overflow":""}}),e("vxe-column",{attrs:{field:"updateTime",title:"UpdateTime",width:"200"}}),e("vxe-column",{attrs:{field:"createTime",title:"CreateTime",width:"200"}}),e("vxe-column",{attrs:{field:"attr1",title:"Attr1",width:"200"}}),e("vxe-column",{attrs:{field:"attr2",title:"Attr2",width:"200"}}),e("vxe-column",{attrs:{field:"attr3",title:"Attr3",width:"200"}}),e("vxe-column",{attrs:{field:"attr4",title:"Attr4",width:"200"}}),e("vxe-column",{attrs:{field:"attr5",title:"Attr5",width:"200"}}),e("vxe-column",{attrs:{field:"attr6",title:"Attr6",width:"200"}}),e("vxe-column",{attrs:{field:"attr7",title:"Attr7",width:"200"}}),e("vxe-column",{attrs:{field:"attr8",title:"Attr8",width:"200"}}),e("vxe-column",{attrs:{field:"attr11",title:"attr11",width:"200"}}),e("vxe-column",{attrs:{field:"attr9",title:"Attr9",width:"200"}}),e("vxe-column",{attrs:{field:"attr10",title:"attr10",width:"200"}})],1),e("p",{staticClass:"demo-code"},[t._v(t._s(t.$t("app.body.button.showCode")))]),e("pre",[t._v("    "),e("pre-code",{staticClass:"xml"},[t._v(t._s(t.demoCodes[0]))]),t._v("\n    "),e("pre-code",{staticClass:"javascript"},[t._v(t._s(t.demoCodes[1]))]),t._v("\n  ")],1)],1)},o=[],i=(n(34338),n(70560),n(50886),n(69851)),r=n.n(i),a={data:function(){return{loading:!1,mergeCells:[{row:4,col:2,rowspan:2,colspan:5},{row:30,col:3,rowspan:10,colspan:1},{row:80,col:4,rowspan:30,colspan:3}],mergeFooterItems:[{row:0,col:1,rowspan:1,colspan:2},{row:0,col:6,rowspan:1,colspan:2},{row:0,col:14,rowspan:2,colspan:5},{row:1,col:4,rowspan:1,colspan:8}],demoCodes:['\n        <vxe-table\n          border\n          resizable\n          show-overflow\n          show-header-overflow\n          show-footer\n          ref="xTable"\n          height="500"\n          :export-config="{}"\n          :merge-cells="mergeCells"\n          :sort-config="{trigger: \'cell\'}"\n          :merge-footer-items="mergeFooterItems"\n          :footer-method="footerMethod"\n          :loading="loading">\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" sortable width="200"></vxe-column>\n          <vxe-column field="id" title="ID" width="200"></vxe-column>\n          <vxe-column field="sex" title="Sex" width="200"></vxe-column>\n          <vxe-column field="rate" title="Rate" width="200"></vxe-column>\n          <vxe-column field="region" title="Region" width="200"></vxe-column>\n          <vxe-column field="time" title="Time" width="200"></vxe-column>\n          <vxe-column field="address" title="Address" width="300" show-overflow></vxe-column>\n          <vxe-column field="updateTime" title="UpdateTime" width="200"></vxe-column>\n          <vxe-column field="createTime" title="CreateTime" width="200"></vxe-column>\n          <vxe-column field="attr1" title="Attr1" width="200"></vxe-column>\n          <vxe-column field="attr2" title="Attr2" width="200"></vxe-column>\n          <vxe-column field="attr3" title="Attr3" width="200"></vxe-column>\n          <vxe-column field="attr4" title="Attr4" width="200"></vxe-column>\n          <vxe-column field="attr5" title="Attr5" width="200"></vxe-column>\n          <vxe-column field="attr6" title="Attr6" width="200"></vxe-column>\n          <vxe-column field="attr7" title="Attr7" width="200"></vxe-column>\n          <vxe-column field="attr8" title="Attr8" width="200"></vxe-column>\n          <vxe-column field="attr11" title="attr11" width="200"></vxe-column>\n          <vxe-column field="attr9" title="Attr9" width="200"></vxe-column>\n          <vxe-column field="attr10" title="attr10" width="200"></vxe-column>\n        </vxe-table>\n        ',"\n        import VXETable from 'vxe-table'\n        \n        export default {\n          data () {\n            return {\n              loading: false,\n              mergeCells: [\n                { row: 4, col: 2, rowspan: 2, colspan: 5 },\n                { row: 30, col: 3, rowspan: 10, colspan: 1 },\n                { row: 80, col: 4, rowspan: 30, colspan: 3 }\n              ],\n              mergeFooterItems: [\n                { row: 0, col: 1, rowspan: 1, colspan: 2 },\n                { row: 0, col: 6, rowspan: 1, colspan: 2 },\n                { row: 0, col: 14, rowspan: 2, colspan: 5 },\n                { row: 1, col: 4, rowspan: 1, colspan: 8 }\n              ]\n            }\n          },\n          created () {\n            this.loadList(600)\n          },\n          methods: {\n            loadList (size) {\n              this.loading = true\n              setTimeout(() => {\n                const data = this.mockList(size)\n                // 使用函数式加载，阻断 vue 对大数据的监听\n                const xTable = this.$refs.xTable\n                const startTime = Date.now()\n                if (xTable) {\n                  this.$refs.xTable.reloadData(data).then(() => {\n                    VXETable.modal.message({ content: `渲染 ${size} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                    this.loading = false\n                  })\n                } else {\n                  this.loading = false\n                }\n              }, 300)\n            },\n            mockList (size) {\n              const list = []\n              for (let index = 0; index < size; index++) {\n                list.push({\n                  name: `名称${index}`,\n                  sex: '0',\n                  num: 123,\n                  age: 18,\n                  num2: 234,\n                  rate: 3,\n                  address: 'shenzhen'\n                })\n              }\n              return list\n            },\n            footerMethod ({ columns }) {\n              return [\n                columns.map((column, index) => index),\n                columns.map((column, index) => 1000 + index)\n              ]\n            }\n          }\n        }\n        "]}},created:function(){this.loadList(600)},methods:{loadList:function(t){var e=this;this.loading=!0,setTimeout((function(){var n=e.mockList(t),l=e.$refs.xTable,o=Date.now();l?e.$refs.xTable.reloadData(n).then((function(){r().modal.message({content:"渲染 ".concat(t," 行，用时 ").concat(Date.now()-o,"毫秒"),status:"info"}),e.loading=!1})):e.loading=!1}),300)},mockList:function(t){for(var e=[],n=0;n<t;n++)e.push({name:"名称".concat(n),sex:"0",num:123,age:18,num2:234,rate:3,address:"shenzhen"});return e},footerMethod:function(t){var e=t.columns;return[e.map((function(t,e){return e})),e.map((function(t,e){return 1e3+e}))]}}},s=a,d=n(1001),c=(0,d.Z)(s,l,o,!1,null,null,null),m=c.exports}}]);