"use strict";(self["webpackChunkvxe_table_v3"]=self["webpackChunkvxe_table_v3"]||[]).push([[6003],{16003:function(n,e,t){t.r(e),t.d(e,{default:function(){return u}});var a=function(){var n=this,e=n._self._c;return e("div",[n._m(0),e("vxe-virtual-tree",{ref:"xVTree",attrs:{resizable:"","show-overflow":"","row-key":"",height:"500",loading:n.loading,data:n.tableData,"toolbar-config":{slots:{buttons:"toolbar_buttons"}},"checkbox-config":{labelField:"name"},"tree-config":{children:"children"},columns:n.tableColumn},scopedSlots:n._u([{key:"toolbar_buttons",fn:function(){return[e("vxe-button",{on:{click:function(e){return n.loadData(1e3)}}},[n._v("加载1k节点")]),e("vxe-button",{on:{click:function(e){return n.loadData(5e3)}}},[n._v("加载5k节点")]),e("vxe-button",{on:{click:function(e){return n.loadData(1e4)}}},[n._v("加载1w节点")]),e("vxe-button",{on:{click:function(e){return n.loadData(3e4)}}},[n._v("加载3w节点")]),e("vxe-button",{on:{click:function(e){return n.$refs.xVTree.setAllTreeExpand(!0)}}},[n._v("展开所有")]),e("vxe-button",{on:{click:function(e){return n.$refs.xVTree.setAllTreeExpand(!1)}}},[n._v("收起所有")])]},proxy:!0}])}),e("p",{staticClass:"demo-code"},[n._v(n._s(n.$t("app.body.button.showCode")))]),e("pre",[n._v("    "),e("pre-code",{staticClass:"xml"},[n._v(n._s(n.demoCodes[0]))]),n._v("\n    "),e("pre-code",{staticClass:"javascript"},[n._v(n._s(n.demoCodes[1]))]),n._v("\n  ")],1)],1)},i=[function(){var n=this,e=n._self._c;return e("p",{staticClass:"tip"},[n._v(" 树形虚拟滚动渲染"),e("span",{staticClass:"orange"},[n._v("（最大可以支撑 1w 列、5w 行）")]),n._v("，具体兼容请查看 "),e("a",{staticClass:"link",attrs:{href:"https://github.com/x-extends/vxe-table-plugin-virtual-tree",target:"_blank"}},[n._v("vxe-table-plugin-virtual-tree")]),n._v(" 插件的 API"),e("br"),n._v(" 复选框不支持父子关联，...具体请看相关文档！"),e("br"),e("span",{staticClass:"red"},[n._v("（注：启用纵向虚拟滚启动后不支持动态行高）")])])}],o=(t(34338),t(60228),t(70560),t(69851)),l=t.n(o),r={data:function(){return{loading:!1,tableData:[],tableColumn:[{type:"seq",title:"序号",width:100},{type:"checkbox",title:"Name",treeNode:!0},{field:"id",title:"ID"}],demoCodes:['\n        <vxe-virtual-tree\n          resizable\n          show-overflow\n          row-key\n          ref="xVTree"\n          height="500"\n          :loading="loading"\n          :data="tableData"\n          :toolbar-config="{slots: {buttons: \'toolbar_buttons\'}}"\n          :checkbox-config="{labelField: \'name\'}"\n          :tree-config="{children: \'children\'}"\n          :columns="tableColumn">\n          <template #toolbar_buttons>\n            <vxe-button @click="loadData(1000)">加载1k节点</vxe-button>\n            <vxe-button @click="loadData(5000)">加载5k节点</vxe-button>\n            <vxe-button @click="loadData(10000)">加载1w节点</vxe-button>\n            <vxe-button @click="loadData(30000)">加载3w节点</vxe-button>\n            <vxe-button @click="$refs.xVTree.setAllTreeExpand(true)">展开所有</vxe-button>\n            <vxe-button @click="$refs.xVTree.setAllTreeExpand(false)">收起所有</vxe-button>\n          </template>\n        </vxe-virtual-tree>\n        ',"\n        import VXETable from 'vxe-table'\n        \n        export default {\n          data () {\n            return {\n              loading: false,\n              tableData: [],\n              tableColumn: [\n                { type: 'seq', title: '序号', width: 100 },\n                { type: 'checkbox', title: 'Name', treeNode: true },\n                { field: 'id', title: 'ID' }\n              ]\n            }\n          },\n          created () {\n            this.loadData(500)\n          },\n          methods: {\n            loadData (size) {\n              this.loading = true\n              this.getTreeList(size).then(data => {\n                const startTime = Date.now()\n                this.tableData = data\n                this.loading = false\n                this.$nextTick(() => {\n                  VXETable.modal.message({ content: `渲染 ${size} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                })\n              })\n            },\n            getTreeList (size) {\n              return new Promise(resolve => {\n                // 模拟后台生成树结构\n                setTimeout(() => {\n                  const len1 = size / 2\n                  const len2 = 3\n                  const len3 = 2\n                  const len4 = 2\n                  const len5 = 6\n                  const result = []\n                  const startIndex = 10000\n                  let ketIndex = 0\n                  for (let index1 = 0; index1 < len1; index1++) {\n                    if (ketIndex >= size) {\n                      break\n                    }\n                    const children1 = []\n                    for (let index2 = 0; index2 < len2; index2++) {\n                      if (ketIndex >= size) {\n                        break\n                      }\n                      const children2 = []\n                      for (let index3 = 0; index3 < len3; index3++) {\n                        if (ketIndex >= size) {\n                          break\n                        }\n                        const children3 = []\n                        for (let index4 = 0; index4 < len4; index4++) {\n                          if (ketIndex >= size) {\n                            break\n                          }\n                          const children4 = []\n                          for (let index5 = 0; index5 < len5; index5++) {\n                            if (ketIndex >= size) {\n                              break\n                            }\n                            const item5 = {\n                              id: startIndex + ketIndex++,\n                              name: `name${index1}_${index2}_${index3}_${index4}_${index5}`,\n                              children: []\n                            }\n                            children4.push(item5)\n                          }\n                          const item4 = {\n                            id: startIndex + ketIndex++,\n                            name: `name${index1}_${index2}_${index3}_${index4}`,\n                            children: children4\n                          }\n                          children3.push(item4)\n                        }\n                        const item3 = {\n                          id: startIndex + ketIndex++,\n                          name: `name${index1}_${index2}_${index3}`,\n                          children: children3\n                        }\n                        children2.push(item3)\n                      }\n                      const item2 = {\n                        id: startIndex + ketIndex++,\n                        name: `name${index1}_${index2}`,\n                        children: children2\n                      }\n                      children1.push(item2)\n                    }\n                    const item1 = {\n                      id: startIndex + ketIndex++,\n                      name: `name${index1}`,\n                      children: children1\n                    }\n                    result.push(item1)\n                  }\n                  resolve(result)\n                }, 300)\n              })\n            }\n          }\n        }\n        "]}},created:function(){this.loadData(500)},methods:{loadData:function(n){var e=this;this.loading=!0,this.getTreeList(n).then((function(t){var a=Date.now();e.tableData=t,e.loading=!1,e.$nextTick((function(){l().modal.message({content:"渲染 ".concat(n," 行，用时 ").concat(Date.now()-a,"毫秒"),status:"info"})}))}))},getTreeList:function(n){return new Promise((function(e){setTimeout((function(){for(var t=n/2,a=3,i=2,o=2,l=6,r=[],c=1e4,s=0,d=0;d<t;d++){if(s>=n)break;for(var u=[],x=0;x<a;x++){if(s>=n)break;for(var b=[],v=0;v<i;v++){if(s>=n)break;for(var h=[],f=0;f<o;f++){if(s>=n)break;for(var m=[],_=0;_<l;_++){if(s>=n)break;var k={id:c+s++,name:"name".concat(d,"_").concat(x,"_").concat(v,"_").concat(f,"_").concat(_),children:[]};m.push(k)}var p={id:c+s++,name:"name".concat(d,"_").concat(x,"_").concat(v,"_").concat(f),children:m};h.push(p)}var g={id:c+s++,name:"name".concat(d,"_").concat(x,"_").concat(v),children:h};b.push(g)}var D={id:c+s++,name:"name".concat(d,"_").concat(x),children:b};u.push(D)}var $={id:c+s++,name:"name".concat(d),children:u};r.push($)}e(r)}),300)}))}}},c=r,s=t(1001),d=(0,s.Z)(c,a,i,!1,null,null,null),u=d.exports}}]);